
/**###################################################################################################################
 * Extract bitpacked flags
 * image - the band to extract the bits from.
 * start - the lowest bit to extract
 * end - the highest bit to extract
 * newName - a name for the output band.
 * 
 * example:   var cirrus = getQAFlags(mod09ga.select('state_1km'), 8, 9, 'cirrus')
 */
function getQAFlags(image, start, end, newName) {
    var pattern = 0;
    for (var i = start; i <= end; i++) {
       pattern += 1 << i;
    }
    // Return a single band image of the extracted QA bits, giving the band a new name.
    return image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);
}




// ###################################################################################################################
// Combine image collections of multiple landsat satellites
// and filter on cloud cover and image quality
//
// author: Philip Kraaijenbrink
//

/*
satlist:  list of the landsat generations to include in the output collection
          (list with any of 4,5,7,8, default includes all)
cloudcov: maximum cloud cover percentage (integer in 0–100 range, default 100)
imageQ:   minimum image quality flag value (integer in 0–10 range, default 0)
type:     use Tier1 top of atmosphere collections or Tier1 surface reflectance collections
          (string, either 'toa' or 'sur', default 'toa')
*/ 

function mergeLandsat(satlist, cloudcov, imageQ, type){
   
  if (satlist===undefined){var satlist=[4,5,7,8]}
  if (cloudcov===undefined){var cloudcov=100}
  if (imageQ===undefined){var imageQ=0}
  if (type===undefined){var type='toa'}
  
  // get all landsast surface reflectance collections
  if (type=='sur'){
    var ls4rfl = ee.ImageCollection("LANDSAT/LT04/C01/T1_SR");
    var ls5rfl = ee.ImageCollection("LANDSAT/LT05/C01/T1_SR");
    var ls7rfl = ee.ImageCollection("LANDSAT/LE07/C01/T1_SR");
    var ls8rfl = ee.ImageCollection("LANDSAT/LC08/C01/T1_SR");
    var QAband = 'pixel_qa'
  }
  if (type=='toa'){
    var ls4rfl = ee.ImageCollection("LANDSAT/LT04/C01/T1_TOA");
    var ls5rfl = ee.ImageCollection("LANDSAT/LT05/C01/T1_TOA");
    var ls7rfl = ee.ImageCollection("LANDSAT/LE07/C01/T1_TOA");
    var ls8rfl = ee.ImageCollection("LANDSAT/LC08/C01/T1_TOA");
    var QAband = 'BQA'
  }
  
  // filter the ls4 TM collection, select bands and rename them
  var ls4 = ls4rfl.filter(ee.Filter.lte('CLOUD_COVER',cloudcov))
                  .filter(ee.Filter.gte('IMAGE_QUALITY',imageQ))
                  .map(function(x){
      return x.select(['B1','B2','B3','B4','B5','B7','B6',QAband])
              .rename(['blue','green','red','nir','swir1','swir2','tir','qa']);
  });                
  
  // filter the ls5 TM collection, select bands and rename them
  var ls5 = ls5rfl.filter(ee.Filter.lte('CLOUD_COVER',cloudcov))
                  .filter(ee.Filter.gte('IMAGE_QUALITY',imageQ))
                  .map(function(x){
    return x.select(['B1','B2','B3','B4','B5','B7','B6',QAband])
            .rename(['blue','green','red','nir','swir1','swir2','tir','qa']);
  });   
  
  // filter the ETM+ collection, select bands and rename them
  var ls7 = ls7rfl.filter(ee.Filter.lte('CLOUD_COVER',cloudcov))
                  .filter(ee.Filter.gte('IMAGE_QUALITY',imageQ))
                  .map(function(x){
      return x.select(['B1','B2','B3','B4','B5','B7','B6',QAband])
              .rename(['blue','green','red','nir','swir1','swir2','tir','qa']);
  });              
  
  // filter the OLI collection, select bands and rename them
  var ls8 = ls8rfl.filter(ee.Filter.lte('CLOUD_COVER',cloudcov))
                  .filter(ee.Filter.gte('IMAGE_QUALITY_OLI',imageQ))
                  .map(function(x){
      return x.select(['B2','B3','B4','B5','B6','B7','B10',QAband])
              .rename(['blue','green','red','nir','swir1','swir2','tir','qa']);
  });     
  
  // create empty collection with a dummy image
  var out = ee.ImageCollection(ee.Image().select());       
  
  // merge collections based on 'satlist' argument
  if (satlist.indexOf(4) > -1){var out = out.merge(ls4)}
  if (satlist.indexOf(5) > -1){var out = out.merge(ls5)}
  if (satlist.indexOf(7) > -1){var out = out.merge(ls7)}
  if (satlist.indexOf(8) > -1){var out = out.merge(ls8)}
  
  // remove empty dummy image by filtering on band name
  var out = out.filter(ee.Filter.listContains('system:band_names', 'nir'));
  return out;
}





// ###################################################################################################################

exports.getQAFlags   = getQAFlags
exports.mergeLandsat = mergeLandsat